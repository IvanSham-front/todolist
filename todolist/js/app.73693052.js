(function(){"use strict";var t={5366:function(t,e,s){var a=s(7195),n=function(){var t=this,e=t._self._c;return e("div",[e("router-view"),e("modal-widget")],1)},o=[],c=function(){var t=this,e=t._self._c;return e("div",{directives:[{name:"show",rawName:"v-show",value:t.$store.getters.modalShow,expression:"$store.getters.modalShow"}],staticClass:"modal-widget"},[e("div",{staticClass:"modal-container"},[e(t.$store.getters.activeModal,{tag:"component"})],1)])},i=[],r=function(){var t=this,e=t._self._c;return e("div",{staticClass:"modal"},[e("h3",{staticClass:"modal__title"},[t._v("Cancel changes?")]),e("div",{staticClass:"modal-buttons"},[e("button",{staticClass:"edit-button",on:{click:t.cancelEdit}},[t._v("Yes")]),e("button",{staticClass:"cancel-button",on:{click:t.closeModal}},[t._v("No")])])])},d=[],l=(s(7658),s(408)),u={name:"modal-cancel",methods:{...(0,l.nv)(["SET_CURRENT_PAGE","SET_CLOSE_MODAL","SET_CURRENT_TASK"]),cancelEdit(){this.$router.push("/"),this.closeModal(),this.SET_CURRENT_TASK(null)},closeModal(){this.SET_CLOSE_MODAL()}}},_=u,k=s(1001),T=(0,k.Z)(_,r,d,!1,null,null,null),h=T.exports,m=function(){var t=this,e=t._self._c;return e("div",{staticClass:"modal"},[e("h3",{staticClass:"modal__title"},[t._v("Delete task?")]),e("div",{staticClass:"modal-buttons"},[e("button",{staticClass:"edit-button",on:{click:t.deleteTask}},[t._v("Yes")]),e("button",{staticClass:"cancel-button",on:{click:t.closeModal}},[t._v("No")])])])},S=[],E={name:"modal-cancel",methods:{...(0,l.nv)(["REMOVE_TASK","SET_CURRENT_PAGE","SET_CLOSE_MODAL"]),deleteTask(){this.REMOVE_TASK(this.currentTask),this.closeModal(),"/"!==this.$route.path&&this.$router.push("/")},closeModal(){this.SET_CLOSE_MODAL()}},computed:{...(0,l.Se)(["currentTask"])}},b=E,v=(0,k.Z)(b,m,S,!1,null,null,null),C=v.exports,p={name:"modal-widget",components:{ModalCancel:h,ModalDelete:C},methods:{}},g=p,A=(0,k.Z)(g,c,i,!1,null,null,null),f=A.exports,O={name:"App",components:{ModalWidget:f},mounted(){this.LOAD_TODOLIST()},methods:{...(0,l.nv)(["LOAD_TODOLIST"])}},R=O,L=(0,k.Z)(R,n,o,!1,null,null,null),N=L.exports,y={state:{todoList:[],currentPage:"Todo list"},getters:{todoList:t=>t.todoList,currentPage:t=>t.currentPage},mutations:{accept_edit_current_task:(t,e)=>{const s=t.todoList.findIndex((t=>t.id===e.id));t.todoList.splice(s,1,e.editedTask)},add_task:(t,e)=>{t.todoList=[...t.todoList,e]},remove_task:(t,e)=>{t.todoList=t.todoList.filter((t=>t.id!==e.id))},toggle_open_task:(t,e)=>{const s=t.todoList.findIndex((t=>t.id===e));t.todoList[s].open=!t.todoList[s].open},toggle_check_task:(t,e)=>{const s=t.todoList.findIndex((t=>t.id===e.taskId));t.todoList[s].checked=e.value;for(let a=0;a<t.todoList[s].subtasks.length;a++)t.todoList[s].subtasks[a].checked=e.value},toggle_check_subtask:(t,e)=>{const s=t.todoList.findIndex((t=>t.id===e.taskId)),a=t.todoList[s].subtasks.findIndex((t=>t.id===e.subtaskId));t.todoList[s].subtasks[a].checked=e.value;let n=!0;for(let o of t.todoList[s].subtasks)o.checked||(n=!1);t.todoList[s].checked=n},set_current_page:(t,e)=>{t.currentPage=e},set_todolist:(t,e)=>{t.todoList=e}},actions:{ADD_TASK:(t,e)=>{t.commit("add_task",e)},REMOVE_TASK:(t,e)=>{t.commit("remove_task",e)},TOGGLE_OPEN_TASK:(t,e)=>{t.commit("toggle_open_task",e)},TOGGLE_CHECK_TASK:(t,e)=>{t.commit("toggle_check_task",e)},TOGGLE_CHECK_SUBTASK:(t,e)=>{t.commit("toggle_check_subtask",e)},SET_CURRENT_PAGE:(t,e)=>{t.commit("set_current_page",e)},ACCEPT_EDIT_CURRENT_TASK(t,e){t.commit("accept_edit_current_task",e)},SAVE_TODOLIST:t=>{window.localStorage.setItem("todolist",JSON.stringify(t.getters.todoList))},LOAD_TODOLIST:t=>{const e=window.localStorage.getItem("todolist");e&&"null"!==e&&t.commit("set_todolist",JSON.parse(e))}}},K={state:{currentTask:null,subtasks:[],history:[],currentIndex:-1},getters:{currentTask:t=>t.currentTask,subtasks:t=>t.subtasks,historyIndex:t=>t.currentIndex,history:t=>t.history},mutations:{set_current_task:(t,e)=>{if(!e)return void(t.currentTask=null);const{id:s,name:a,open:n,checked:o}=e;t.currentTask={id:s,name:a,open:n,checked:o},t.subtasks=e.subtasks},set_current_task_name:(t,e)=>{t.currentTask.name=e},add_current_task_subtask:(t,e)=>{t.subtasks=[...t.subtasks,e]},set_current_task_subtask_name:(t,e)=>{const s=t.subtasks.findIndex((t=>t.id===e.id));t.subtasks[s].name=e.value},remove_current_task_subtask:(t,e)=>{t.subtasks=t.subtasks.filter((t=>t.id!==e))},toggle_check_current_task:(t,e)=>{t.currentTask.checked=e;for(let s=0;s<t.subtasks.length;s++)t.subtasks[s].checked=e},toggle_check_current_task_subtask:(t,e)=>{const s=t.subtasks.findIndex((t=>t.id===e.id));t.subtasks[s].checked=e.value;let a=!0;for(let n of t.subtasks)n.checked||(a=!1);t.currentTask.checked=a},set_default_history:t=>{t.history=[{currentTask:t.currentTask,subtasks:t.subtasks}]},save_history_step:t=>{t.history.push({currentTask:JSON.parse(JSON.stringify(t.currentTask)),subtasks:JSON.parse(JSON.stringify(t.subtasks))}),t.currentIndex++},undo_history:t=>{t.currentIndex--;const e=t.currentTask;Object.keys(e).forEach((e=>{a.ZP.set(t.currentTask,e,t.history[t.currentIndex].currentTask[e])})),t.subtasks=t.history[t.currentIndex].subtasks},rendo_history:t=>{t.currentIndex++;const e=t.currentTask;Object.keys(e).forEach((e=>{a.ZP.set(t.currentTask,e,t.history[t.currentIndex].currentTask[e])})),t.subtasks=t.history[t.currentIndex].subtasks}},actions:{SET_CURRENT_TASK:(t,e)=>{t.commit("set_current_task",e),t.commit("save_history_step")},SET_CURRENT_TASK_NAME:(t,e)=>{t.commit("set_current_task_name",e),t.commit("save_history_step")},ADD_CURRENT_TASK_SUBTASK:(t,e)=>{t.commit("add_current_task_subtask",e),t.commit("save_history_step")},REMOVE_CURRENT_TASK_SUBTASK:(t,e)=>{t.commit("remove_current_task_subtask",e),t.commit("save_history_step")},SET_CURRENT_TASK_SUBTASK_NAME:(t,e)=>{t.commit("set_current_task_subtask_name",e),t.commit("save_history_step")},TOGGLE_CHECK_CURRENT_TASK:(t,e)=>{t.commit("toggle_check_current_task",e),t.commit("save_history_step")},TOGGLE_CHECK_CURRENT_TASK_SUBTASK:(t,e)=>{t.commit("toggle_check_current_task_subtask",e),t.commit("save_history_step")},SET_DEFAULT_HISTORY:t=>{t.commit("save_defaul_history")},SAVE_HISTORY_STEP:t=>{t.commit("save_history_step")},UNDO_HISTORY:t=>{t.commit("undo_history")},RENDO_HISTORY:t=>{t.commit("rendo_history")}}},U={state:{activeModal:"",modalShow:!1},getters:{activeModal:t=>t.activeModal,modalShow:t=>t.modalShow},mutations:{set_active_modal:(t,e)=>{t.activeModal=e},set_modal_show:(t,e)=>{t.modalShow=e}},actions:{SET_OPEN_MODAL:(t,e)=>{t.commit("set_active_modal",e),t.commit("set_modal_show",!0)},SET_CLOSE_MODAL:t=>{t.commit("set_active_modal",""),t.commit("set_modal_show",!1)}}};a.ZP.use(l.ZP);var x=new l.ZP.Store({modules:{todolist:y,currentTask:K,modals:U}}),D=s(2241),I=function(){var t=this,e=t._self._c;return e("main",{staticClass:"main"},[e("section",{staticClass:"container"},[e("h1",{staticClass:"title"},[t._v(t._s(t.currentPage))]),"Todo list"===t.currentPage?e("div",{staticClass:"todo-page"},[e("div",{staticClass:"todo-page__add add-block"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.newTaskValue,expression:"newTaskValue"}],staticClass:"add-block__input",attrs:{placeholder:"+ add new task",type:"text"},domProps:{value:t.newTaskValue},on:{change:t.changeNewTaskValue,input:function(e){e.target.composing||(t.newTaskValue=e.target.value)}}}),e("button",{staticClass:"add-block__btn edit-button",attrs:{disabled:""===t.newTaskValue},on:{click:t.addTask}},[t._v("Add Task")])]),e("todo-list"),t.noTask?e("div",{staticClass:"todo-page__notask"},[t._v("No task")]):t._e()],1):t._e()])])},w=[],M=function(){var t=this,e=t._self._c;return e("ul",{staticClass:"todo-list"},t._l(t.todoList,(function(s){return e("li",{key:s.id,staticClass:"task"},[e("div",{staticClass:"task__inner"},[e("input",{directives:[{name:"model",rawName:"v-model",value:s.checked,expression:"task.checked"}],staticClass:"task__checkbox custom_checkbox",attrs:{type:"checkbox",id:"id"+s.name+s.id},domProps:{checked:Array.isArray(s.checked)?t._i(s.checked,null)>-1:s.checked},on:{change:[function(e){var a=s.checked,n=e.target,o=!!n.checked;if(Array.isArray(a)){var c=null,i=t._i(a,c);n.checked?i<0&&t.$set(s,"checked",a.concat([c])):i>-1&&t.$set(s,"checked",a.slice(0,i).concat(a.slice(i+1)))}else t.$set(s,"checked",o)},function(e){return t.toggleCheckTaskes(e,s.id)}]}}),e("label",{attrs:{for:"id"+s.name+s.id}}),e("div",{staticClass:"task__details",class:{task__details_empty:0===s.subtasks.length,task__details_open:s.open},on:{click:function(e){return t.toggleOpenTask(s.id)}}},[e("p",{staticClass:"task__summary"},[t._v(t._s(t.taskName(s.name,s.subtasks)))])])]),s.open?e("ul",{staticClass:"task__subtasks-list"},t._l(s.subtasks,(function(a){return e("li",{key:a.id,staticClass:"task__subtask-item"},[e("input",{directives:[{name:"model",rawName:"v-model",value:a.checked,expression:"subTask.checked"}],staticClass:"task__checkbox custom-checkbox",attrs:{id:"id"+a.name+a.id,type:"checkbox"},domProps:{checked:Array.isArray(a.checked)?t._i(a.checked,null)>-1:a.checked},on:{change:[function(e){var s=a.checked,n=e.target,o=!!n.checked;if(Array.isArray(s)){var c=null,i=t._i(s,c);n.checked?i<0&&t.$set(a,"checked",s.concat([c])):i>-1&&t.$set(a,"checked",s.slice(0,i).concat(s.slice(i+1)))}else t.$set(a,"checked",o)},function(e){return t.toggleCheckSubTask(e,s.id,a.id)}]}}),e("label",{attrs:{for:"id"+a.name+a.id}},[t._v(t._s(a.name))])])})),0):t._e(),e("div",{staticClass:"task__buttons"},[e("button",{staticClass:"edit-button",on:{click:function(e){return t.editTask(s)}}},[t._v("edit")]),e("button",{staticClass:"delete-button",on:{click:function(e){return t.openModalDeleteTask(s.id)}}},[t._v("remove")])])])})),0)},P=[],G={name:"todoList",data(){return{}},methods:{...(0,l.nv)(["SET_CURRENT_TASK","SET_CURRENT_PAGE","TOGGLE_CHECK_TASK","SAVE_TODOLIST","TOGGLE_CHECK_SUBTASK","SAVE_TODOLIST","TOGGLE_OPEN_TASK","SET_OPEN_MODAL"]),taskName(t,e){let s=t;if(e.length>0){let t=0;for(const s of e)s.checked&&t++;s+=` ${t}/${e.length}`}return s},editTask(t){this.SET_CURRENT_TASK(t),this.$router.push("/edit/"+t.id)},toggleCheckTaskes(t,e){this.TOGGLE_CHECK_TASK({value:t.target.checked,taskId:e}),this.SAVE_TODOLIST()},toggleCheckSubTask(t,e,s){this.TOGGLE_CHECK_SUBTASK({value:t.target.checked,taskId:e,subtaskId:s}),this.SAVE_TODOLIST()},toggleOpenTask(t){this.TOGGLE_OPEN_TASK(t)},openModalDeleteTask(t){const e=this.todoList.find((e=>e.id===t));this.SET_CURRENT_TASK(e),this.SET_OPEN_MODAL("modal-delete")}},computed:{...(0,l.Se)(["todoList"])}},V=G,$=(0,k.Z)(V,M,P,!1,null,null,null),H=$.exports,Z={name:"todoPage",components:{TodoList:H},data(){return{newTaskValue:"",activeModal:"",modalShow:!1}},methods:{...(0,l.nv)(["SET_CLOSE_MODAL","SAVE_TODOLIST","REMOVE_TASK","SET_CURRENT_TASK","SET_CURRENT_PAGE","SET_CLOSE_MODAL","ADD_TASK","LOAD_TODOLIST"]),addTask(){const t={id:0!==this.todoList.length?this.todoList.at(-1).id+1:0,name:this.newTaskValue,subtasks:[],open:!1,checked:!1};this.ADD_TASK(t),this.newTaskValue=""},changeNewTaskValue(t){this.newTaskValue=t.target.value},deleteTask(){this.REMOVE_TASK(),this.SET_CURRENT_TASK(null),"Edit page"===this.currentPage&&this.SET_CURRENT_PAGE("Todo list")},closeModal(){this.SET_CLOSE_MODAL()}},computed:{...(0,l.Se)(["currentPage","todoList"]),noTask(){return 0===this.todoList.length}},beforeUpdate(){this.SAVE_TODOLIST()}},B=Z,Y=(0,k.Z)(B,I,w,!1,null,null,null),j=Y.exports,J=function(){var t=this,e=t._self._c;return t.currentTask?e("section",{staticClass:"task-edit task-edit__inner"},[e("div",{staticClass:"buttons-history"},[e("button",{attrs:{disabled:t.disabledUndo},on:{click:t.undoChanges}},[t._v("←")]),e("button",{attrs:{disabled:t.disabledRendo},on:{click:t.rendoChanges}},[t._v("→")])]),e("h2",{staticClass:"task-edit__title"},[t._v("select title task")]),e("div",{staticClass:"task-edit__head"},[e("input",{directives:[{name:"model",rawName:"v-model",value:t.currentTask.checked,expression:"currentTask.checked"}],attrs:{id:"task",type:"checkbox"},domProps:{checked:Array.isArray(t.currentTask.checked)?t._i(t.currentTask.checked,null)>-1:t.currentTask.checked},on:{focusout:function(e){return t.toggleCheckTaskes(e)},change:function(e){var s=t.currentTask.checked,a=e.target,n=!!a.checked;if(Array.isArray(s)){var o=null,c=t._i(s,o);a.checked?c<0&&t.$set(t.currentTask,"checked",s.concat([o])):c>-1&&t.$set(t.currentTask,"checked",s.slice(0,c).concat(s.slice(c+1)))}else t.$set(t.currentTask,"checked",n)}}}),e("label",{attrs:{for:"task"}}),e("input",{directives:[{name:"model",rawName:"v-model",value:t.currentTask.name,expression:"currentTask.name"}],staticClass:"task-edit__input",attrs:{type:"text"},domProps:{value:t.currentTask.name},on:{change:function(e){return t.changeCurrentTaskName(e)},input:function(e){e.target.composing||t.$set(t.currentTask,"name",e.target.value)}}}),e("button",{staticClass:"task__delete-btn delete-button",on:{click:t.openModalDeleteTask}},[t._v("delete")])]),e("hr",{staticClass:"line"}),e("ul",{staticClass:"task-edit__subtasks"},[e("h3",{staticClass:"tast-edit__title"},[t._v("subtasks")]),t._l(t.subtasks,(function(s){return e("li",{key:s.id,staticClass:"task__subtask-item"},[e("input",{directives:[{name:"model",rawName:"v-model",value:s.checked,expression:"subtask.checked"}],staticClass:"task__checkbox",attrs:{type:"checkbox",id:s.id+s.name},domProps:{checked:Array.isArray(s.checked)?t._i(s.checked,null)>-1:s.checked},on:{change:[function(e){var a=s.checked,n=e.target,o=!!n.checked;if(Array.isArray(a)){var c=null,i=t._i(a,c);n.checked?i<0&&t.$set(s,"checked",a.concat([c])):i>-1&&t.$set(s,"checked",a.slice(0,i).concat(a.slice(i+1)))}else t.$set(s,"checked",o)},function(e){return t.toggleCheckSubTask(e,s.id)}]}}),e("label",{attrs:{for:s.id+s.name}}),e("input",{directives:[{name:"model",rawName:"v-model",value:s.name,expression:"subtask.name"}],staticClass:"task-edit__input",attrs:{type:"text"},domProps:{value:s.name},on:{focusout:function(e){return t.changeSubtaskName(e,s.id)},input:function(e){e.target.composing||t.$set(s,"name",e.target.value)}}}),e("button",{staticClass:"task__delete-btn delete-button",on:{click:function(e){return t.deleteSubtask(s.id)}}},[t._v("delete")])])}))],2),e("button",{staticClass:"task-edit__add-btn edit-button",on:{click:function(e){return t.addSubtask(t.nextIndex)}}},[t._v("Add Subtask")]),e("div",{staticClass:"task__buttons"},[e("button",{staticClass:"task__edit-btn edit-button",attrs:{disabled:!t.checkEmptySubtasks},on:{click:t.acceptEditCurrentTask}},[t._v("accept")]),e("button",{staticClass:"task__cancel-btn cancel-button",on:{click:t.openModalCancelChanges}},[t._v("cancel")])])]):t._e()},F=[],W={name:"editPage",data(){return{timer:null}},mounted(){this.currentTask||setTimeout((()=>{const t=this.$route.params.id,e=this.todoList.find((e=>e.id==t));e?this.SET_CURRENT_TASK(e):this.$router.push("/")}),500)},methods:{...(0,l.nv)(["SET_CURRENT_TASK_NAME","SET_CURRENT_TASK","ADD_CURRENT_TASK_SUBTASK","SET_CURRENT_TASK_SUBTASK_NAME","REMOVE_CURRENT_TASK_SUBTASK","SET_OPEN_MODAL","ACCEPT_EDIT_CURRENT_TASK","TOGGLE_CHECK_CURRENT_TASK","TOGGLE_CHECK_CURRENT_TASK_SUBTASK","UNDO_HISTORY","RENDO_HISTORY","SET_CURRENT_PAGE"]),changeCurrentTaskName(t){this.SET_CURRENT_TASK_NAME(t.target.value)},addSubtask(){const t={id:this.currentTask.id+"."+this.nextIndex,checked:!1,name:""};this.ADD_CURRENT_TASK_SUBTASK(t)},changeSubtaskName(t,e){t&&t.target&&this.SET_CURRENT_TASK_SUBTASK_NAME({value:t.target.value,id:e})},deleteSubtask(t){this.REMOVE_CURRENT_TASK_SUBTASK(t)},openModalCancelChanges(){this.SET_OPEN_MODAL("modal-cancel")},acceptEditCurrentTask(){const t={id:this.currentTask.id,editedTask:{...this.currentTask,subtasks:this.subtasks}};this.ACCEPT_EDIT_CURRENT_TASK(t),this.$router.push("/"),this.SET_CURRENT_TASK(null)},toggleCheckTaskes(t){this.TOGGLE_CHECK_CURRENT_TASK(t.target.checked)},toggleCheckSubTask(t,e){const s={value:t.target.checked,id:e};this.TOGGLE_CHECK_CURRENT_TASK_SUBTASK(s)},openModalDeleteTask(){this.SET_OPEN_MODAL("modal-delete")},undoChanges(){this.UNDO_HISTORY()},rendoChanges(){this.RENDO_HISTORY()}},computed:{...(0,l.Se)(["subtasks","currentTask","historyIndex","history","todoList"]),nextIndex(){return 0===this.subtasks.length?0:this.subtasks.length+1},checkEmptySubtasks(){return this.subtasks.every((t=>""!==t.name))},disabledUndo(){return this.historyIndex<=0},disabledRendo(){return this.historyIndex>=this.history.length-1}}},q=W,z=(0,k.Z)(q,J,F,!1,null,null,null),Q=z.exports;a.ZP.use(D.ZP);const X=[{path:"/",component:j},{path:"/edit/:id",component:Q}],tt=new D.ZP({routes:X});var et=tt;a.ZP.config.productionTip=!1,new a.ZP({store:x,router:et,render:t=>t(N)}).$mount("#app")}},e={};function s(a){var n=e[a];if(void 0!==n)return n.exports;var o=e[a]={exports:{}};return t[a].call(o.exports,o,o.exports,s),o.exports}s.m=t,function(){var t=[];s.O=function(e,a,n,o){if(!a){var c=1/0;for(l=0;l<t.length;l++){a=t[l][0],n=t[l][1],o=t[l][2];for(var i=!0,r=0;r<a.length;r++)(!1&o||c>=o)&&Object.keys(s.O).every((function(t){return s.O[t](a[r])}))?a.splice(r--,1):(i=!1,o<c&&(c=o));if(i){t.splice(l--,1);var d=n();void 0!==d&&(e=d)}}return e}o=o||0;for(var l=t.length;l>0&&t[l-1][2]>o;l--)t[l]=t[l-1];t[l]=[a,n,o]}}(),function(){s.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return s.d(e,{a:e}),e}}(),function(){s.d=function(t,e){for(var a in e)s.o(e,a)&&!s.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})}}(),function(){s.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}()}(),function(){s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}}(),function(){var t={143:0};s.O.j=function(e){return 0===t[e]};var e=function(e,a){var n,o,c=a[0],i=a[1],r=a[2],d=0;if(c.some((function(e){return 0!==t[e]}))){for(n in i)s.o(i,n)&&(s.m[n]=i[n]);if(r)var l=r(s)}for(e&&e(a);d<c.length;d++)o=c[d],s.o(t,o)&&t[o]&&t[o][0](),t[o]=0;return s.O(l)},a=self["webpackChunkteamlead"]=self["webpackChunkteamlead"]||[];a.forEach(e.bind(null,0)),a.push=e.bind(null,a.push.bind(a))}();var a=s.O(void 0,[998],(function(){return s(5366)}));a=s.O(a)})();
//# sourceMappingURL=app.73693052.js.map